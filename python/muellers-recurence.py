# Mullerâ€™s Recurrence

# https://medium.com/@bellmar/is-cobol-holding-you-hostage-with-math-5498c0eb428b
# https://latkin.org/blog/2014/11/22/mullers-recurrence-roundoff-gone-wrong/

from decimal import Decimal

def rec(y, z):
    return 108 - ((815-1500/z)/y)

def floatpt(N):
    x = [4, 4.25]
    for i in range(2, N+1):
        x.append(rec(x[i-1], x[i-2]))
    return x

def fixedpt(N):
    x = [Decimal(4), Decimal(17)/Decimal(4)]
    for i in range(2, N+1):
        x.append(rec(x[i-1], x[i-2]))
    return x

N = 20
flt = floatpt(N)
fxd = fixedpt(N)
for i in range(N):
    print (str(i) + ' | '+str(flt[i])+' | '+str(fxd[i]))

# 0 | 4 | 4
# 1 | 4.25 | 4.25
# 2 | 4.470588235294116 | 4.4705882352941176470588235
# 3 | 4.6447368421052175 | 4.6447368421052631578947362
# 4 | 4.770538243625083 | 4.7705382436260623229461618
# 5 | 4.855700712568563 | 4.8557007125890736342039857
# 6 | 4.91084749866063 | 4.9108474990827932004342938
# 7 | 4.945537395530508 | 4.9455374041239167246519529
# 8 | 4.966962408040999 | 4.9669625817627005962571288
# 9 | 4.980042204293014 | 4.9800457013556311118526582
# 10 | 4.987909232795786 | 4.9879794484783912679439415
# 11 | 4.991362641314552 | 4.9927702880620482067468253
# 12 | 4.967455095552268 | 4.9956558915062356478184985
# 13 | 4.42969049830883 | 4.9973912683733697540253088
# 14 | -7.817236578459315 | 4.9984339437852482376781601
# 15 | 168.93916767106458 | 4.9990600687785413938424188
# 16 | 102.03996315205927 | 4.9994358732880376990501184
# 17 | 100.0999475162497 | 4.9996602467866575821700634
# 18 | 100.00499204097244 | 4.9997713526716167817979714
# 19 | 100.0002495792373 | 4.9993671517118171375788238

